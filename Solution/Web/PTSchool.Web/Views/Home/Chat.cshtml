@{
    this.ViewBag.Title = "SchoolChat!";
}

@{ 
    string colorByRole = string.Empty;
    string textByRole = string.Empty;
    if (User.IsInRole("Student"))
    {
        colorByRole = "success";
        textByRole = "white";
    }
    else if (User.IsInRole("Teacher"))
    {
        colorByRole = "primary";
        textByRole = "white";

    }
    else if (User.IsInRole("Parent"))
    {
        colorByRole = "warning";
        textByRole = "dark";
    }
}

<div class="container">
    <div class="row justify-content-center align-items-center">
        <h1 onmouseover="this.style.fontSize='50px'" onmouseout="this.style.fontSize='40px'">School<strong>Chat!</strong></h1>
    </div>
    <hr style="height: 5px;" class="bg-@colorByRole"/>    
</div>

<div class="container">
    <div id="message-holder" class="mt-3 d-flex justify-content-start">
        <h4>Message</h4>
        <input class="w-75 ml-4 pl-3" type="text" id="messageInput" placeholder="Message..." />
        <button id="sendButton" class="ml-4 btn btn-lg btn-@colorByRole text-@textByRole">Send</button>
    </div>
    <hr />
    <div id="messagesList" style="font-size: 24px;">
    </div>
</div>



@section Scripts {
<script>
    var connection =
        new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .build();

    @{
        string dateTimeNow = $"{@DateTime.UtcNow.Year:D2}/{@DateTime.UtcNow.Month:D2}/{@DateTime.UtcNow.Day:D2} {@DateTime.UtcNow.Hour:D2}:{@DateTime.UtcNow.Minute:D2}";
    }

    connection.on("NewMessage",
        function (message) {
            var chatInfo = `<div>@dateTimeNow | ${message.user}: ${escapeHtml(message.text)}</div>`;
            $("#messagesList").append(chatInfo);
        });

    $("#sendButton").click(function() {
        var message = $("#messageInput").val();
        connection.invoke("Send", message);
        $("#messageInput").val("");
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    //PT: To escape HTML injection in chat:
    function escapeHtml(unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
</script>
}