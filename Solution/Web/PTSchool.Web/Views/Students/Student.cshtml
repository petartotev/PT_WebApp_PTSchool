@model PTSchool.Web.Models.Student.StudentByIdFullViewModel

@{
    ViewData["Title"] = "Student";
}

@{
    string averageScore = $"{Model.StudentProfileFull.AverageScore:F2}";
    string averageBehavior = $"{Model.StudentProfileFull.AverageBehavior:F2}";
    string name = $"{@Model.StudentProfileFull.FirstName} {@Model.StudentProfileFull.LastName.Substring(0, 1)}.";
    string colorByRole = string.Empty;
    if (User.IsInRole("Student"))
    {
        colorByRole = "success";
    }
    else if (User.IsInRole("Teacher"))
    {
        colorByRole = "primary";
    }
    else if (User.IsInRole("Parent"))
    {
        colorByRole = "warning";
    }
}

<div class="row">
    <div class="col-md-2 bg-success text-white">
        <h1 class="text-center mx-auto d-block">Student</h1>
        <hr />
        <img class="rounded-circle mx-auto d-block" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StudentProfileFull.ImageM)" alt="@Model.StudentProfileFull.LastName" width="300" height="300">
        <h3 class="text-center"><strong>@name</strong></h3>
        <br />
        <div class="row">
            <div class="col col-md-1"></div>
            <div class="col col-md-10">
                <h5 class="text-justify font-italic">" @Model.StudentProfileFull.AboutMe "</h5>
            </div>
            <div class="col col-md-1"></div>
        </div>
        <hr />
        <div class="container">
            <a class="btn btn-large btn-dark text-@colorByRole mx-auto d-block" onclick="window.location='@Url.Action("AllMarks", "Marks", new { id = Model.StudentProfileFull.Id })'">MARKS</a>
        </div>
        <br />
        <div class="container">
            <a class="btn btn-large btn-dark text-@colorByRole mx-auto d-block" onclick="window.location='@Url.Action("AllNotes", "Notes", new { id = Model.StudentProfileFull.Id })'">NOTES</a>
        </div>
        <hr />
        @if (User.IsInRole("Teacher"))
        {
            <div class="container">
                <a class="btn btn-large btn-primary text-white mx-auto d-block" onclick="window.location='@Url.Action("AddMark", "Marks", new { id = Model.StudentProfileFull.Id })'">ADD MARK!</a>
            </div>
            <br />
            <div class="container">
                <a class="btn btn-large btn-primary text-white mx-auto d-block" onclick="window.location='@Url.Action("AddNote", "Notes", new { id = Model.StudentProfileFull.Id })'">ADD NOTE!</a>
            </div>
            <hr />
        }
        @if (!User.IsInRole("Parent"))
        {
            <div class="container">
                <a class="btn btn-large btn-dark text-@colorByRole mx-auto d-block" onclick="window.location='@Url.Action("", "", new { id = Model.StudentProfileFull.Id })'">EMAIL!</a>
            </div>
            <br />
            <div class="container">
                <a class="btn btn-large btn-dark text-@colorByRole mx-auto d-block" onclick="window.location='@Url.Action("", "", new { id = Model.StudentProfileFull.Id })'">CHAT!</a>
            </div>
        }
        <hr />
    </div>
    <div class="col-md-10">
        <table class="table table-striped table-bordered">
            <tr>
                <th>Key</th>
                <th>Value</th>
            </tr>
            <tr>
                <td>Name</td>
                <td>@Model.StudentProfileFull.FirstName @Model.StudentProfileFull.MiddleName @Model.StudentProfileFull.LastName</td>
            </tr>
            <tr>
                <td>Gender</td>
                <td>@Model.StudentProfileFull.Gender</td>
            </tr>
            <tr>
                <td>Date Of Birth</td>
                <td>@Model.StudentProfileFull.DateOfBirth.Year/@Model.StudentProfileFull.DateOfBirth.Month/@Model.StudentProfileFull.DateOfBirth.Day</td>
            </tr>
            <tr>
                <td>Age</td>
                <td>@Model.StudentProfileFull.Age</td>
            </tr>
            <tr>
                <td>Email</td>
                <td>@Model.StudentProfileFull.Email</td>
            </tr>
            <tr>
                <td>Phone</td>
                <td>@Model.StudentProfileFull.Phone</td>
            </tr>
            <tr>
                <td>Address</td>
                <td>@Model.StudentProfileFull.Address</td>
            </tr>
            <tr>
                <td>Class</td>
                <td>
                    <a href="@Url.Action("Class", "Classes", new { id = Model.StudentProfileFull.ClassId })">
                        <img class="rounded-circle" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StudentProfileFull.ClassImageXXS)" alt="class" width="50" height="50">
                    </a>
                </td>
            </tr>
            <tr>
                <td>Class Master</td>
                <td>
                    <a href="@Url.Action("Teacher", "Teachers", new { id = Model.StudentProfileFull.ClassMasterId })">
                        <img class="rounded-circle" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StudentProfileFull.ClassMasterImageXXS)" alt="classmaster" width="50" height="50">
                    </a>
                </td>
            </tr>
            <tr>
                <td>Student Council Member?</td>
                @if (Model.StudentProfileFull.IsSchoolCouncilMember)
                {
                    <td class="text-success">YES</td>
                }
                else
                {
                    <td class="text-danger">NO</td>
                }
            </tr>
            <tr>
                <td>Clubs</td>
                <td>
                    @for (int i = 0; i < Model.StudentProfileFull.ClubsIds.Count(); i++)
                    {
                        <a href="@Url.Action("Club", "Clubs", new { id = Model.StudentProfileFull.ClubsIds.ToList()[i] })">
                            <img class="rounded-circle" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StudentProfileFull.ClubsImagesXXS.ToList()[i])" alt="club" width="50" height="50">
                        </a>
                    }
                </td>
            </tr>
            <tr>
                <td>Average Score</td>
                <td>@averageScore</td>
            </tr>
            <tr>
                <td>Average Behavior</td>
                <td>@averageBehavior</td>
            </tr>
            <tr>
                <td>Parents</td>
                <td>
                    @for (int i = 0; i < Model.StudentProfileFull.ParentsIds.Count(); i++)
                    {
                        <a href="@Url.Action("Parent", "Parents", new { id = Model.StudentProfileFull.ParentsIds.ToList()[i] })">
                            <img class="rounded-circle" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StudentProfileFull.ParentsImagesXXS.ToList()[i])" alt="parent" width="50" height="50">
                        </a>
                    }
                </td>
            </tr>
        </table>
    </div>
</div>

